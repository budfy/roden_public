"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function contactsForm() {
  document.querySelector(".contacts__form").addEventListener("submit", function (t) {
    t.preventDefault();
    var e = t.target,
      o = new FormData(e);
    var a = new Date();
    o.append("Дата", a.toLocaleString("UA-uk"));
    var _iterator = _createForOfIteratorHelper(o.values()),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _t = _step.value;
        console.log(_t);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    axios.post("./send.php", o, {
      headers: {
        "Content-Type": "multipart/form-data"
      }
    }).then(function (t) {
      return t.data.ok || (console.warn(t), console.table(t.data)), e.reset(), !0;
    })["catch"](function (t) {
      console.error(t);
    });
  });
}
function textareaAutoHeight() {
  var t = document.querySelector("textarea");
  autosize(t);
}
contactsForm(), textareaAutoHeight();
"use strict";

function headerType() {
  var e = "en" !== document.documentElement.lang ? ["запускати", "покращувати", "підтримувати"] : ["launch", "improve", "support"];
  new Typed(".header__title-typed", {
    strings: e,
    typeSpeed: 100,
    backSpeed: 100,
    backDelay: 3e3,
    smartBackspace: !0,
    loop: !0,
    loopCount: 1 / 0
  });
}
function resizeVideo() {
  var e = document.querySelector(".header__video"),
    t = window.innerWidth;
  t < 1024 ? e.setAttribute("src", "video/roden_400x300_30.mp4") : t < 1366 ? e.setAttribute("src", "video/roden_600x450_30.mp4") : e.setAttribute("src", "video/roden_800x600_30.mp4");
}
headerType(), resizeVideo();
"use strict";
"use strict";

function questions() {
  var e = document.querySelectorAll(".question");
  function t(t) {
    var n = t.currentTarget.parentElement;
    var o;
    n.classList.contains("--is-opening") || n.classList.contains("--is-open") ? s(n) : (e.forEach(function (e) {
      return s(e);
    }), (o = n).classList.add("--is-opening"), o.querySelector(".question__content-wrapper").style.height = o.querySelector(".question__content-inner").scrollHeight + "px", setTimeout(function () {
      o.classList.remove("--is-opening"), o.classList.add("--is-open"), o.removeAttribute("style");
    }, 250), n.scrollIntoView({
      behavior: "smooth",
      block: "center"
    }));
  }
  function s(e) {
    e.querySelector(".question__content-wrapper").style.height = 0, e.querySelector(".question__content-wrapper").removeAttribute("style"), e.classList.remove("--is-opening"), e.classList.remove("--is-open");
  }
  document.querySelectorAll(".question__title").forEach(function (e) {
    return e.addEventListener("click", t);
  });
}
questions();
"use strict";

function topbar() {
  var e = window.pageYOffset,
    t = window.innerHeight;
  window.addEventListener("scroll", function () {
    var r = window.pageYOffset;
    r >= t && document.querySelector(".topbar.--main") ? (document.querySelector(".topbar.--main .topbar__logo").style.width = "3.5rem", document.querySelector(".topbar.--main .topbar__logo").style.height = "3.5rem", document.querySelector(".topbar.--main").style.padding = "0.75rem 0", document.querySelector(".topbar.--main").style.opacity = 1, document.querySelector(".topbar.--main").style.pointerEvents = "all", document.querySelector(".topbar.--main").style.boxShadow = "0 0.5rem 1.25rem rgba(0, 0, 0, 0.25)", document.querySelector(".topbar.--main .topbar__wrapper").style.alignItems = "center", document.querySelector(".topbar.--main").style.height = "auto") : r < t && document.querySelector(".topbar.--main") && (document.querySelector(".topbar.--main").style.opacity = 0, document.querySelector(".topbar.--main").style.height = "0", document.querySelector(".topbar.--main").style.pointerEvents = "none", document.querySelector(".topbar.--main, .topbar.--main .topbar__logo, .topbar__wrapper").removeAttribute("style"), document.querySelector(".topbar.--main .topbar__logo").removeAttribute("style"), document.querySelector(".topbar.--main .topbar__wrapper").removeAttribute("style")), e = r;
  });
}
function topbarBurger() {
  var e = document.querySelectorAll(".topbar__burger"),
    t = document.querySelector(".mobile-menu__close"),
    r = document.querySelector(".mobile-menu"),
    o = document.querySelector(".topbar.--header"),
    n = document.querySelectorAll(".mobile-menu .menu__link, .mobile-menu .mobile-menu__icon-link");
  function a() {
    e.forEach(function (e) {
      return e.classList.add("--is-active");
    }), r.style.transform = "translateX(0)";
  }
  function c() {
    e.forEach(function (e) {
      return e.classList.remove("--is-active");
    }), o.removeAttribute("style"), r.removeAttribute("style");
  }
  e.forEach(function (e) {
    return e.addEventListener("click", a);
  }), t.addEventListener("click", c), n.forEach(function (e) {
    return e.addEventListener("click", c);
  });
}
topbar(), topbarBurger();
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function bubbles() {
  var t = document.querySelector(".page-bg").querySelectorAll(".page-bubble"),
    s = window.innerWidth,
    e = window.innerHeight;
  function i(t) {
    var i = t.offsetLeft,
      l = t.offsetWidth,
      n = t.offsetTop,
      c = t.offsetHeight,
      a = o(75, 200) / 100;
    t.style.transform = "scale(".concat(a, ")"), s > i + l && i + l >= 0 && (t.style.left = o(1, s - l) + "px"), e > n + c && n + c >= 0 && (t.style.top = o(1, e - c) + "px");
  }
  function o(t, s) {
    return Math.floor(Math.random() * (s - t + 1)) + t;
  }
  t.forEach(function (t) {
    return i(t);
  }), setInterval(function () {
    t.forEach(function (t) {
      return i(t);
    });
  }, 9750);
}
bubbles();
var ItcAccordion = /*#__PURE__*/function () {
  function ItcAccordion(t, s) {
    _classCallCheck(this, ItcAccordion);
    this._el = "string" == typeof t ? document.querySelector(t) : t;
    this._config = Object.assign({
      alwaysOpen: !0,
      duration: 350
    }, s), this.addEventListener();
  }
  _createClass(ItcAccordion, [{
    key: "addEventListener",
    value: function addEventListener() {
      var _this = this;
      this._el.addEventListener("click", function (t) {
        var s = t.target.closest(".accordion__header");
        if (s) {
          if (!_this._config.alwaysOpen) {
            var _t = _this._el.querySelector(".accordion__item_show");
            _t && _t !== s.parentElement && _this.toggle(_t);
          }
          _this.toggle(s.parentElement);
        }
      });
    }
  }, {
    key: "show",
    value: function show(t) {
      var s = t.querySelector(".accordion__body");
      if (s.classList.contains("collapsing") || t.classList.contains("accordion__item_show")) return;
      s.style.display = "block";
      var e = s.offsetHeight;
      s.style.height = 0, s.style.overflow = "hidden", s.style.transition = "height ".concat(this._config.duration, "ms ease"), s.classList.add("collapsing"), t.classList.add("accordion__item_slidedown"), s.offsetHeight, s.style.height = e + "px", window.setTimeout(function () {
        s.classList.remove("collapsing"), t.classList.remove("accordion__item_slidedown"), s.classList.add("collapse"), t.classList.add("accordion__item_show"), s.style.display = "", s.style.height = "", s.style.transition = "", s.style.overflow = "";
      }, this._config.duration);
    }
  }, {
    key: "hide",
    value: function hide(t) {
      var s = t.querySelector(".accordion__body");
      !s.classList.contains("collapsing") && t.classList.contains("accordion__item_show") && (s.style.height = s.offsetHeight + "px", s.offsetHeight, s.style.display = "block", s.style.height = 0, s.style.overflow = "hidden", s.style.transition = "height ".concat(this._config.duration, "ms ease"), s.classList.remove("collapse"), t.classList.remove("accordion__item_show"), s.classList.add("collapsing"), window.setTimeout(function () {
        s.classList.remove("collapsing"), s.classList.add("collapse"), s.style.display = "", s.style.height = "", s.style.transition = "", s.style.overflow = "";
      }, this._config.duration));
    }
  }, {
    key: "toggle",
    value: function toggle(t) {
      t.classList.contains("accordion__item_show") ? this.hide(t) : this.show(t);
    }
  }]);
  return ItcAccordion;
}();